{"ast":null,"code":"var _jsxFileName = \"/Users/dewchat/Desktop/gummy/diew/src/components/Chat.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { getDatabase, ref, push, onValue } from 'firebase/database';\nimport { app } from '../utils/firebase';\nimport History from './History';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Chat() {\n  _s();\n  const [chat, setChat] = useState('');\n  const [history, setHistory] = useState([]);\n  useEffect(() => {\n    fetchChatHistory();\n  }, []);\n  const fetchChatHistory = () => {\n    const database = getDatabase(app);\n    const chatRef = ref(database, 'chats');\n    onValue(chatRef, snapshot => {\n      const data = snapshot.val();\n      const chatArray = data ? Object.values(data) : [];\n      setHistory(chatArray);\n    });\n  };\n  const handleSendMessage = () => {\n    const database = getDatabase(app);\n    const chatRef = ref(database, 'chats');\n    const chatData = {\n      message: chat,\n      timestamp: Date.now()\n    };\n    push(chatRef, chatData).then(() => {\n      setChat('');\n      fetchChatHistory(); // Refresh history after sending a message\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: chat,\n      onChange: e => setChat(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSendMessage,\n      children: \"Send\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(History, {\n      history: history\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n}\n_s(Chat, \"Vz2X6SFhVHQWG3cEvx6ZpDSWyiU=\");\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useEffect","useState","getDatabase","ref","push","onValue","app","History","jsxDEV","_jsxDEV","Chat","_s","chat","setChat","history","setHistory","fetchChatHistory","database","chatRef","snapshot","data","val","chatArray","Object","values","handleSendMessage","chatData","message","timestamp","Date","now","then","children","type","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/dewchat/Desktop/gummy/diew/src/components/Chat.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { getDatabase, ref, push, onValue } from 'firebase/database';\nimport { app } from '../utils/firebase';\nimport History from './History';\n\nfunction Chat() {\n    const [chat, setChat] = useState('');\n    const [history, setHistory] = useState([]);\n\n    useEffect(() => {\n        fetchChatHistory();\n    }, []);\n\n    const fetchChatHistory = () => {\n        const database = getDatabase(app);\n        const chatRef = ref(database, 'chats');\n\n        onValue(chatRef, (snapshot) => {\n            const data = snapshot.val();\n            const chatArray = data ? Object.values(data) : [];\n            setHistory(chatArray);\n        });\n    };\n\n    const handleSendMessage = () => {\n        const database = getDatabase(app);\n        const chatRef = ref(database, 'chats');\n        const chatData = { message: chat, timestamp: Date.now() };\n\n        push(chatRef, chatData).then(() => {\n            setChat('');\n            fetchChatHistory(); // Refresh history after sending a message\n        });\n    };\n\n    return (\n        <div>\n            <input type=\"text\" value={chat} onChange={(e) => setChat(e.target.value)} />\n            <button onClick={handleSendMessage}>Send</button>\n\n            <History history={history} />\n        </div>\n    );\n}\n\nexport default Chat;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,WAAW,EAAEC,GAAG,EAAEC,IAAI,EAAEC,OAAO,QAAQ,mBAAmB;AACnE,SAASC,GAAG,QAAQ,mBAAmB;AACvC,OAAOC,OAAO,MAAM,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhC,SAASC,IAAIA,CAAA,EAAG;EAAAC,EAAA;EACZ,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACa,OAAO,EAAEC,UAAU,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAE1CD,SAAS,CAAC,MAAM;IACZgB,gBAAgB,CAAC,CAAC;EACtB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMA,gBAAgB,GAAGA,CAAA,KAAM;IAC3B,MAAMC,QAAQ,GAAGf,WAAW,CAACI,GAAG,CAAC;IACjC,MAAMY,OAAO,GAAGf,GAAG,CAACc,QAAQ,EAAE,OAAO,CAAC;IAEtCZ,OAAO,CAACa,OAAO,EAAGC,QAAQ,IAAK;MAC3B,MAAMC,IAAI,GAAGD,QAAQ,CAACE,GAAG,CAAC,CAAC;MAC3B,MAAMC,SAAS,GAAGF,IAAI,GAAGG,MAAM,CAACC,MAAM,CAACJ,IAAI,CAAC,GAAG,EAAE;MACjDL,UAAU,CAACO,SAAS,CAAC;IACzB,CAAC,CAAC;EACN,CAAC;EAED,MAAMG,iBAAiB,GAAGA,CAAA,KAAM;IAC5B,MAAMR,QAAQ,GAAGf,WAAW,CAACI,GAAG,CAAC;IACjC,MAAMY,OAAO,GAAGf,GAAG,CAACc,QAAQ,EAAE,OAAO,CAAC;IACtC,MAAMS,QAAQ,GAAG;MAAEC,OAAO,EAAEf,IAAI;MAAEgB,SAAS,EAAEC,IAAI,CAACC,GAAG,CAAC;IAAE,CAAC;IAEzD1B,IAAI,CAACc,OAAO,EAAEQ,QAAQ,CAAC,CAACK,IAAI,CAAC,MAAM;MAC/BlB,OAAO,CAAC,EAAE,CAAC;MACXG,gBAAgB,CAAC,CAAC,CAAC,CAAC;IACxB,CAAC,CAAC;EACN,CAAC;EAED,oBACIP,OAAA;IAAAuB,QAAA,gBACIvB,OAAA;MAAOwB,IAAI,EAAC,MAAM;MAACC,KAAK,EAAEtB,IAAK;MAACuB,QAAQ,EAAGC,CAAC,IAAKvB,OAAO,CAACuB,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC5EhC,OAAA;MAAQiC,OAAO,EAAEjB,iBAAkB;MAAAO,QAAA,EAAC;IAAI;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAEjDhC,OAAA,CAACF,OAAO;MAACO,OAAO,EAAEA;IAAQ;MAAAwB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC5B,CAAC;AAEd;AAAC9B,EAAA,CAtCQD,IAAI;AAAAiC,EAAA,GAAJjC,IAAI;AAwCb,eAAeA,IAAI;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}