{"ast":null,"code":"var _jsxFileName = \"/Users/dewchat/Desktop/gummy/diew/dew/src/Chat.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { database } from './/firebase'; // สมมุติว่า firebase ถูกตั้งค่าไว้แล้ว\nimport { ref, push, onValue } from 'firebase/database';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Chat() {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [question, setQuestion] = useState('');\n  useEffect(() => {\n    const messagesRef = ref(database, 'chatMessages');\n    onValue(messagesRef, snapshot => {\n      const data = snapshot.val();\n      const messagesArray = [];\n      for (let key in data) {\n        messagesArray.push(data[key]);\n      }\n      setMessages(messagesArray);\n    });\n  }, []);\n  const addMessage = (text, isUser) => {\n    const messageObj = {\n      text,\n      isUser,\n      timestamp: Date.now()\n    };\n    setMessages(prevMessages => [...prevMessages, messageObj]);\n    const messagesRef = ref(database, 'chatMessages');\n    push(messagesRef, messageObj);\n  };\n  const fetchAnswer = () => {\n    if (question.trim() === '') return;\n    addMessage(question, true);\n    setQuestion('');\n    fetch(\"https://ox2bo5qoa4.execute-api.us-east-1.amazonaws.com/chatbot\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        \"inputText\": question\n      })\n    }).then(response => response.json()).then(data => {\n      addMessage(data.body, false);\n    }).catch(error => {\n      console.error(\"Error:\", error);\n      addMessage(\"เกิดข้อผิดพลาด โปรดลองอีกครั้ง\", false);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Chat Interface\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"message-list\",\n      children: messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: message.isUser ? \"user-message\" : \"bot-message\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: message.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n          children: new Date(message.timestamp).toLocaleTimeString()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: question,\n        onChange: e => setQuestion(e.target.value),\n        placeholder: \"Type your question...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: fetchAnswer,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n_s(Chat, \"0js5ZGT6amOoUFxktd7+5emgT4U=\");\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useState","useEffect","database","ref","push","onValue","jsxDEV","_jsxDEV","Chat","_s","messages","setMessages","question","setQuestion","messagesRef","snapshot","data","val","messagesArray","key","addMessage","text","isUser","messageObj","timestamp","Date","now","prevMessages","fetchAnswer","trim","fetch","method","headers","body","JSON","stringify","then","response","json","catch","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","message","index","toLocaleTimeString","type","value","onChange","e","target","placeholder","onClick","_c","$RefreshReg$"],"sources":["/Users/dewchat/Desktop/gummy/diew/dew/src/Chat.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { database } from './/firebase';  // สมมุติว่า firebase ถูกตั้งค่าไว้แล้ว\r\nimport { ref, push, onValue } from 'firebase/database';\r\n\r\nfunction Chat() {\r\n  const [messages, setMessages] = useState([]);\r\n  const [question, setQuestion] = useState('');\r\n\r\n  useEffect(() => {\r\n    const messagesRef = ref(database, 'chatMessages');\r\n    onValue(messagesRef, (snapshot) => {\r\n      const data = snapshot.val();\r\n      const messagesArray = [];\r\n      for (let key in data) {\r\n        messagesArray.push(data[key]);\r\n      }\r\n      setMessages(messagesArray);\r\n    });\r\n  }, []);\r\n\r\n  const addMessage = (text, isUser) => {\r\n    const messageObj = { text, isUser, timestamp: Date.now() };\r\n    setMessages(prevMessages => [...prevMessages, messageObj]);\r\n\r\n    const messagesRef = ref(database, 'chatMessages');\r\n    push(messagesRef, messageObj);\r\n  };\r\n\r\n  const fetchAnswer = () => {\r\n    if (question.trim() === '') return;\r\n\r\n    addMessage(question, true);\r\n    setQuestion('');\r\n\r\n    fetch(\"https://ox2bo5qoa4.execute-api.us-east-1.amazonaws.com/chatbot\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      body: JSON.stringify({ \"inputText\": question })\r\n    })\r\n    .then(response => response.json())\r\n    .then(data => {\r\n      addMessage(data.body, false);\r\n    })\r\n    .catch(error => {\r\n      console.error(\"Error:\", error);\r\n      addMessage(\"เกิดข้อผิดพลาด โปรดลองอีกครั้ง\", false);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Chat Interface</h1>\r\n      <div className=\"message-list\">\r\n        {messages.map((message, index) => (\r\n          <div key={index} className={message.isUser ? \"user-message\" : \"bot-message\"}>\r\n            <p>{message.text}</p>\r\n            <small>{new Date(message.timestamp).toLocaleTimeString()}</small>\r\n          </div>\r\n        ))}\r\n      </div>\r\n      \r\n      <div className=\"input-section\">\r\n        <input\r\n          type=\"text\"\r\n          value={question}\r\n          onChange={(e) => setQuestion(e.target.value)}\r\n          placeholder=\"Type your question...\"\r\n        />\r\n        <button onClick={fetchAnswer}>Send</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Chat;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}