{"ast":null,"code":"var _jsxFileName = \"/Users/dewchat/Desktop/gummy/diew/src/components/Chatbot.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Chatbot({\n  onMessageSend\n}) {\n  _s();\n  const [userMessage, setUserMessage] = useState('');\n  const addMessage = (text, isUser) => {\n    onMessageSend(text, isUser);\n  };\n  const fetchAnswer = () => {\n    const question = userMessage.trim();\n    if (question === \"\") return;\n\n    // Display user message\n    addMessage(question, true);\n    setUserMessage('');\n    fetch(\"https://ox2bo5qoa4.execute-api.us-east-1.amazonaws.com/chatbot\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        inputText: question\n      })\n    }).then(response => response.json()).then(data => {\n      // Display bot response\n      addMessage(data.body, false);\n    }).catch(error => {\n      console.error(\"Error:\", error);\n      addMessage(\"An error occurred. Please try again.\", false);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: userMessage,\n      onChange: e => setUserMessage(e.target.value),\n      placeholder: \"Ask something...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: fetchAnswer,\n      children: \"Send\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n_s(Chatbot, \"lAJhdWNuoX3bkpiM0rCyGKW81+Q=\");\n_c = Chatbot;\nexport default Chatbot;\nvar _c;\n$RefreshReg$(_c, \"Chatbot\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Chatbot","onMessageSend","_s","userMessage","setUserMessage","addMessage","text","isUser","fetchAnswer","question","trim","fetch","method","headers","body","JSON","stringify","inputText","then","response","json","data","catch","error","console","children","type","value","onChange","e","target","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/dewchat/Desktop/gummy/diew/src/components/Chatbot.js"],"sourcesContent":["import React, { useState } from 'react';\n\nfunction Chatbot({ onMessageSend }) {\n  const [userMessage, setUserMessage] = useState('');\n\n  const addMessage = (text, isUser) => {\n    onMessageSend(text, isUser);\n  };\n\n  const fetchAnswer = () => {\n    const question = userMessage.trim();\n    if (question === \"\") return;\n\n    // Display user message\n    addMessage(question, true);\n    setUserMessage('');\n\n    fetch(\"https://ox2bo5qoa4.execute-api.us-east-1.amazonaws.com/chatbot\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ inputText: question }),\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        // Display bot response\n        addMessage(data.body, false);\n      })\n      .catch((error) => {\n        console.error(\"Error:\", error);\n        addMessage(\"An error occurred. Please try again.\", false);\n      });\n  };\n\n  return (\n    <div>\n      <input\n        type=\"text\"\n        value={userMessage}\n        onChange={(e) => setUserMessage(e.target.value)}\n        placeholder=\"Ask something...\"\n      />\n      <button onClick={fetchAnswer}>Send</button>\n    </div>\n  );\n}\n\nexport default Chatbot;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,OAAOA,CAAC;EAAEC;AAAc,CAAC,EAAE;EAAAC,EAAA;EAClC,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAElD,MAAMQ,UAAU,GAAGA,CAACC,IAAI,EAAEC,MAAM,KAAK;IACnCN,aAAa,CAACK,IAAI,EAAEC,MAAM,CAAC;EAC7B,CAAC;EAED,MAAMC,WAAW,GAAGA,CAAA,KAAM;IACxB,MAAMC,QAAQ,GAAGN,WAAW,CAACO,IAAI,CAAC,CAAC;IACnC,IAAID,QAAQ,KAAK,EAAE,EAAE;;IAErB;IACAJ,UAAU,CAACI,QAAQ,EAAE,IAAI,CAAC;IAC1BL,cAAc,CAAC,EAAE,CAAC;IAElBO,KAAK,CAAC,gEAAgE,EAAE;MACtEC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEC,SAAS,EAAER;MAAS,CAAC;IAC9C,CAAC,CAAC,CACCS,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEG,IAAI,IAAK;MACd;MACAhB,UAAU,CAACgB,IAAI,CAACP,IAAI,EAAE,KAAK,CAAC;IAC9B,CAAC,CAAC,CACDQ,KAAK,CAAEC,KAAK,IAAK;MAChBC,OAAO,CAACD,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;MAC9BlB,UAAU,CAAC,sCAAsC,EAAE,KAAK,CAAC;IAC3D,CAAC,CAAC;EACN,CAAC;EAED,oBACEN,OAAA;IAAA0B,QAAA,gBACE1B,OAAA;MACE2B,IAAI,EAAC,MAAM;MACXC,KAAK,EAAExB,WAAY;MACnByB,QAAQ,EAAGC,CAAC,IAAKzB,cAAc,CAACyB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;MAChDI,WAAW,EAAC;IAAkB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/B,CAAC,eACFpC,OAAA;MAAQqC,OAAO,EAAE5B,WAAY;MAAAiB,QAAA,EAAC;IAAI;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACxC,CAAC;AAEV;AAACjC,EAAA,CA5CQF,OAAO;AAAAqC,EAAA,GAAPrC,OAAO;AA8ChB,eAAeA,OAAO;AAAC,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}