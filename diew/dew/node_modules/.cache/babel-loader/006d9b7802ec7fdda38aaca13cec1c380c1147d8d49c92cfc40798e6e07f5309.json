{"ast":null,"code":"var _jsxFileName = \"/Users/dewchat/Desktop/gummy/diew/dew/src/History.js\",\n  _s = $RefreshSig$();\n// History.js\nimport React, { useState, useEffect } from 'react';\nimport { database, ref, onValue } from './firebaseConfig';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction History({\n  username\n}) {\n  _s();\n  const [customerProblem, setCustomerProblem] = useState(null);\n  useEffect(() => {\n    const problemRef = ref(database, `users/${username}/customer_problem`);\n\n    // Listen for real-time updates\n    const unsubscribe = onValue(problemRef, snapshot => {\n      if (snapshot.exists()) {\n        setCustomerProblem(snapshot.val());\n      } else {\n        setCustomerProblem(null); // No customer problem found\n      }\n    }, error => {\n      console.error(\"Error fetching customer problem:\", error);\n    });\n\n    // Clean up the listener when the component unmounts\n    return () => unsubscribe();\n  }, [username]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"history-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Customer Problem History\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), customerProblem ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"customer-problem\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Problem Message:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 14\n        }, this), \" \", customerProblem.problemMessage]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Department:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 14\n        }, this), \" \", customerProblem.department]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Status:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 14\n        }, this), \" \", customerProblem.status]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Timestamp:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 14\n        }, this), \" \", new Date(customerProblem.timestamp).toLocaleString()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No customer problems reported.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n_s(History, \"+hOjFBIfWBAu/Ep8LvEj1yXZs5Y=\");\n_c = History;\nexport default History;\nvar _c;\n$RefreshReg$(_c, \"History\");","map":{"version":3,"names":["React","useState","useEffect","database","ref","onValue","jsxDEV","_jsxDEV","History","username","_s","customerProblem","setCustomerProblem","problemRef","unsubscribe","snapshot","exists","val","error","console","id","children","fileName","_jsxFileName","lineNumber","columnNumber","className","problemMessage","department","status","Date","timestamp","toLocaleString","_c","$RefreshReg$"],"sources":["/Users/dewchat/Desktop/gummy/diew/dew/src/History.js"],"sourcesContent":["// History.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport { database, ref, onValue } from './firebaseConfig';\r\n\r\nfunction History({ username }) {\r\n  const [customerProblem, setCustomerProblem] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const problemRef = ref(database, `users/${username}/customer_problem`);\r\n    \r\n    // Listen for real-time updates\r\n    const unsubscribe = onValue(problemRef, (snapshot) => {\r\n      if (snapshot.exists()) {\r\n        setCustomerProblem(snapshot.val());\r\n      } else {\r\n        setCustomerProblem(null); // No customer problem found\r\n      }\r\n    }, (error) => {\r\n      console.error(\"Error fetching customer problem:\", error);\r\n    });\r\n\r\n    // Clean up the listener when the component unmounts\r\n    return () => unsubscribe();\r\n  }, [username]);\r\n\r\n  return (\r\n    <div id=\"history-container\">\r\n      <h2>Customer Problem History</h2>\r\n      {customerProblem ? (\r\n        <div className=\"customer-problem\">\r\n          <p><strong>Problem Message:</strong> {customerProblem.problemMessage}</p>\r\n          <p><strong>Department:</strong> {customerProblem.department}</p>\r\n          <p><strong>Status:</strong> {customerProblem.status}</p>\r\n          <p><strong>Timestamp:</strong> {new Date(customerProblem.timestamp).toLocaleString()}</p>\r\n        </div>\r\n      ) : (\r\n        <p>No customer problems reported.</p>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default History;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}